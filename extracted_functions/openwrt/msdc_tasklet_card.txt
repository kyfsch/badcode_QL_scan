static void msdc_tasklet_card(struct work_struct *work)
{
	struct msdc_host *host = (struct msdc_host *)container_of(work,
				struct msdc_host, card_delaywork.work);
	void __iomem *base = host->base;
	u32 inserted;
	u32 status = 0;
    //u32 change = 0;

	spin_lock(&host->lock);

	status = sdr_read32(MSDC_PS);
	if (cd_active_low)
		inserted = (status & MSDC_PS_CDSTS) ? 0 : 1;
	else
		inserted = (status & MSDC_PS_CDSTS) ? 1 : 0;
	if (host->mmc->caps & MMC_CAP_NEEDS_POLL)
		inserted = 1;

#if 0
	change = host->card_inserted ^ inserted;
	host->card_inserted = inserted;

	if (change && !host->suspend) {
		if (inserted)
			host->mmc->f_max = HOST_MAX_MCLK;  // work around
		mmc_detect_change(host->mmc, msecs_to_jiffies(20));
	}
#else  /* Make sure: handle the last interrupt */
	host->card_inserted = inserted;

	if (!host->suspend) {
		host->mmc->f_max = HOST_MAX_MCLK;
		mmc_detect_change(host->mmc, msecs_to_jiffies(20));
	}

	IRQ_MSG("card found<%s>", inserted ? "inserted" : "removed");
#endif

	spin_unlock(&host->lock);
}
