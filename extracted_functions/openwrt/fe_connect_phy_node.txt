int fe_connect_phy_node(struct fe_priv *priv, struct device_node *phy_node, int port)
{
	const __be32 *_phy_addr = NULL;
	struct phy_device *phydev;
	phy_interface_t phy_mode = PHY_INTERFACE_MODE_NA;

	_phy_addr = of_get_property(phy_node, "reg", NULL);

	if (!_phy_addr || (be32_to_cpu(*_phy_addr) >= 0x20)) {
		pr_err("%s: invalid phy id\n", phy_node->name);
		return -EINVAL;
	}

	of_get_phy_mode(phy_node, &phy_mode);
	if (phy_mode == PHY_INTERFACE_MODE_NA) {
		dev_err(priv->dev, "incorrect phy-mode %d\n", phy_mode);
		priv->phy->phy_node[port] = NULL;
		return -EINVAL;
	}

	phydev = of_phy_connect(priv->netdev, phy_node, fe_phy_link_adjust,
				0, phy_mode);
	if (!phydev) {
		dev_err(priv->dev, "could not connect to PHY\n");
		priv->phy->phy_node[port] = NULL;
		return -ENODEV;
	}

	phy_set_max_speed(phydev, SPEED_1000);
	linkmode_copy(phydev->advertising, phydev->supported);
	phydev->no_auto_carrier_off = 1;

	dev_info(priv->dev,
		 "connected port %d to PHY at %s [uid=%08x, driver=%s]\n",
		 port, dev_name(&phydev->mdio.dev), phydev->phy_id,
		 phydev->drv->name);

	priv->phy->phy[port] = phydev;
	priv->link[port] = 0;

	return 0;
}
