static int sha1_hmac_final_impl(struct shash_desc *desc, u8 *out, bool hash_final);

/*! \fn static void sha1_hmac_transform(struct crypto_tfm *tfm, u32 const *in)
 *  \ingroup IFX_SHA1_HMAC_FUNCTIONS
 *  \brief save input block to context   
 *  \param tfm linux crypto algo transform  
 *  \param in 64-byte block of input  
*/                                 
static int sha1_hmac_transform(struct shash_desc *desc, u32 const *in)
{
    struct sha1_hmac_ctx *sctx =  crypto_shash_ctx(desc->tfm);

    if ( ((sctx->dbn<<4)+1) > SHA1_HMAC_DBN_TEMP_SIZE )
    {
        //printk("SHA1_HMAC_DBN_TEMP_SIZE exceeded\n");
        sha1_hmac_final_impl(desc, (u8 *)sctx->hash, false);
    }

    memcpy(&sctx->temp[sctx->dbn], in, 64); //dbn workaround
    sctx->dbn += 1;

    return 0;
}
