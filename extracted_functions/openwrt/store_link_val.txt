store_link_val(struct nl_msg *msg, struct nlattr *nla, struct switch_val *val)
{
	struct nlattr *tb[SWITCH_LINK_ATTR_MAX + 1];
	struct switch_port_link *link;
	int err = 0;

	if (!val->value.link)
		val->value.link = malloc(sizeof(struct switch_port_link));

	err = nla_parse_nested(tb, SWITCH_LINK_ATTR_MAX, nla, link_policy);
	if (err < 0)
		goto out;

	link = val->value.link;
	link->link = !!tb[SWITCH_LINK_FLAG_LINK];
	link->duplex = !!tb[SWITCH_LINK_FLAG_DUPLEX];
	link->aneg = !!tb[SWITCH_LINK_FLAG_ANEG];
	link->tx_flow = !!tb[SWITCH_LINK_FLAG_TX_FLOW];
	link->rx_flow = !!tb[SWITCH_LINK_FLAG_RX_FLOW];
	link->speed = nla_get_u32(tb[SWITCH_LINK_SPEED]);
	link->eee = 0;
	if (tb[SWITCH_LINK_FLAG_EEE_100BASET])
		link->eee |= SWLIB_LINK_FLAG_EEE_100BASET;
	if (tb[SWITCH_LINK_FLAG_EEE_1000BASET])
		link->eee |= SWLIB_LINK_FLAG_EEE_1000BASET;

out:
	return err;
}
