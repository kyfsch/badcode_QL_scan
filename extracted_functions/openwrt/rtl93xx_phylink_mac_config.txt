static void rtl93xx_phylink_mac_config(struct dsa_switch *ds, int port,
					unsigned int mode,
					const struct phylink_link_state *state)
{
	struct rtl838x_switch_priv *priv = ds->priv;
	int sds_num, sds_mode;
	u32 reg;

	pr_info("%s port %d, mode %x, phy-mode: %s, speed %d, link %d\n", __func__,
		port, mode, phy_modes(state->interface), state->speed, state->link);

	/* Nothing to be done for the CPU-port */
	if (port == priv->cpu_port)
		return;

	if (priv->family_id == RTL9310_FAMILY_ID)
		return rtl931x_phylink_mac_config(ds, port, mode, state);

	sds_num = priv->ports[port].sds_num;
	pr_info("%s SDS is %d\n", __func__, sds_num);
	if (sds_num >= 0) {
		switch (state->interface) {
		case PHY_INTERFACE_MODE_HSGMII:
			sds_mode = 0x12;
			break;
		case PHY_INTERFACE_MODE_1000BASEX:
			sds_mode = 0x04;
			break;
		case PHY_INTERFACE_MODE_XGMII:
			sds_mode = 0x10;
			break;
		case PHY_INTERFACE_MODE_10GBASER:
		case PHY_INTERFACE_MODE_10GKR:
			sds_mode = 0x1b; /* 10G 1000X Auto */
			break;
		case PHY_INTERFACE_MODE_USXGMII:
			sds_mode = 0x0d;
			break;
		default:
			pr_err("%s: unknown serdes mode: %s\n",
			       __func__, phy_modes(state->interface));
			return;
		}
		if (state->interface == PHY_INTERFACE_MODE_10GBASER)
			rtl9300_serdes_setup(sds_num, state->interface);
	}

	reg = sw_r32(priv->r->mac_force_mode_ctrl(port));
	reg &= ~(0xf << 3);

	switch (state->speed) {
	case SPEED_10000:
		reg |= 4 << 3;
		break;
	case SPEED_5000:
		reg |= 6 << 3;
		break;
	case SPEED_2500:
		reg |= 5 << 3;
		break;
	case SPEED_1000:
		reg |= 2 << 3;
		break;
	case SPEED_100:
		reg |= 1 << 3;
		break;
	default:
		/* Also covers 10M */
		break;
	}

	if (state->link)
		reg |= RTL930X_FORCE_LINK_EN;

	if (priv->lagmembers & BIT_ULL(port))
		reg |= RTL930X_DUPLEX_MODE | RTL930X_FORCE_LINK_EN;

	if (state->duplex == DUPLEX_FULL)
		reg |= RTL930X_DUPLEX_MODE;
	else
		reg &= ~RTL930X_DUPLEX_MODE; /* Clear duplex bit otherwise */

	if (priv->ports[port].phy_is_integrated)
		reg &= ~RTL930X_FORCE_EN; /* Clear MAC_FORCE_EN to allow SDS-MAC link */
	else
		reg |= RTL930X_FORCE_EN;

	sw_w32(reg, priv->r->mac_force_mode_ctrl(port));
}
