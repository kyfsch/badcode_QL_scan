static int block_load_image_raw(block_dev_desc_t * device, lbaint_t sector)
{
	int n;
	u32 image_size_sectors;
	struct image_header *header;

	header = (struct image_header *)(CONFIG_SYS_TEXT_BASE -
						sizeof(struct image_header));

	/* read image header to find the image size & load address */
	n = device->block_read(device->dev, sector, 1, header);

	if (n != 1) {
		printf("spl: blk read err\n");
		return 1;
	}

	spl_parse_image_header(header);

	/* convert size to sectors - round up */
	image_size_sectors = (spl_image.size + 512 - 1) / 512;
	n = device->block_read(device->dev, sector, image_size_sectors,
					(void *)spl_image.load_addr);

	if (n != image_size_sectors) {
		printf("spl: blk read err\n");
		return 1;
	}
	return 0;
}
