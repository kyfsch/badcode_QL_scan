int routerboot_rle_decode(const u8 *in, size_t inlen, u8 *out, size_t *outlen)
{
	int ret, run, nbytes;	// use native types for speed
	u8 byte;

	if (!in || (inlen < 2) || !out)
		return -EINVAL;

	ret = -ENOSPC;
	nbytes = 0;
	while (inlen >= 2) {
		run = *in++;
		inlen--;

		/* Verbatim copies */
		if (run & 0x80) {
			/* Invert run byte sign */
			run = ~run & 0xFF;
			run++;

			if (run > inlen)
				goto fail;

			inlen -= run;

			nbytes += run;
			if (nbytes > *outlen)
				goto fail;

			/* Basic memcpy */
			while (run-- > 0)
				*out++ = *in++;
		}
		/* Stream of half-words RLE: <run><byte>. run == 0 is ignored */
		else {
			byte = *in++;
			inlen--;

			nbytes += run;
			if (nbytes > *outlen)
				goto fail;

			while (run-- > 0)
				*out++ = byte;
		}
	}

	ret = 0;
fail:
	*outlen = nbytes;
	return ret;
}
