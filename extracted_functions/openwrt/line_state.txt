static void line_state(int fd) {
	IOCTL(DSL_LineState_t, DSL_FIO_LINE_STATE_GET)

	int map = LSTATE_MAP_UNKNOWN;
	const char *str;
	switch (out.data.nLineState) {
	STR_CASE_MAP(DSL_LINESTATE_NOT_INITIALIZED, "Not initialized", LSTATE_MAP_NOT_INITIALIZED)
	STR_CASE_MAP(DSL_LINESTATE_EXCEPTION, "Exception", LSTATE_MAP_EXCEPTION)
	STR_CASE(DSL_LINESTATE_NOT_UPDATED, "Not updated")
	STR_CASE(DSL_LINESTATE_IDLE_REQUEST, "Idle request")
	STR_CASE_MAP(DSL_LINESTATE_IDLE, "Idle", LSTATE_MAP_IDLE)
	STR_CASE(DSL_LINESTATE_SILENT_REQUEST, "Silent request")
	STR_CASE_MAP(DSL_LINESTATE_SILENT, "Silent", LSTATE_MAP_SILENT)
	STR_CASE_MAP(DSL_LINESTATE_HANDSHAKE, "Handshake", LSTATE_MAP_HANDSHAKE)
	STR_CASE(DSL_LINESTATE_BONDING_CLR, "Bonding CLR")
	STR_CASE_MAP(DSL_LINESTATE_FULL_INIT, "Full init", LSTATE_MAP_FULL_INIT)
	STR_CASE(DSL_LINESTATE_SHORT_INIT_ENTRY, "Short init entry")
	STR_CASE(DSL_LINESTATE_DISCOVERY, "Discovery")
	STR_CASE(DSL_LINESTATE_TRAINING, "Training")
	STR_CASE(DSL_LINESTATE_ANALYSIS, "Analysis")
	STR_CASE(DSL_LINESTATE_EXCHANGE, "Exchange")
	STR_CASE_MAP(DSL_LINESTATE_SHOWTIME_NO_SYNC, "Showtime without TC-Layer sync", LSTATE_MAP_SHOWTIME_NO_SYNC)
	STR_CASE_MAP(DSL_LINESTATE_SHOWTIME_TC_SYNC, "Showtime with TC-Layer sync", LSTATE_MAP_SHOWTIME_TC_SYNC)
	STR_CASE(DSL_LINESTATE_FASTRETRAIN, "Fastretrain")
	STR_CASE(DSL_LINESTATE_LOWPOWER_L2, "Lowpower L2")
	STR_CASE(DSL_LINESTATE_LOOPDIAGNOSTIC_ACTIVE, "Loopdiagnostic active")
	STR_CASE(DSL_LINESTATE_LOOPDIAGNOSTIC_DATA_EXCHANGE, "Loopdiagnostic data exchange")
	STR_CASE(DSL_LINESTATE_LOOPDIAGNOSTIC_DATA_REQUEST, "Loopdiagnostic data request")
	STR_CASE(DSL_LINESTATE_LOOPDIAGNOSTIC_COMPLETE, "Loopdiagnostic complete")
	STR_CASE_MAP(DSL_LINESTATE_RESYNC, "Resync", LSTATE_MAP_RESYNC)
	STR_CASE(DSL_LINESTATE_TEST, "Test")
	STR_CASE(DSL_LINESTATE_TEST_LOOP, "Test loop")
	STR_CASE(DSL_LINESTATE_TEST_REVERB, "Test reverb")
	STR_CASE(DSL_LINESTATE_TEST_MEDLEY, "Test medley")
	STR_CASE(DSL_LINESTATE_TEST_SHOWTIME_LOCK, "Showtime lock")
	STR_CASE(DSL_LINESTATE_TEST_QUIET, "Quiet")
	STR_CASE(DSL_LINESTATE_LOWPOWER_L3, "Lowpower L3")
#ifndef INCLUDE_DSL_CPE_API_DANUBE
	STR_CASE(DSL_LINESTATE_DISABLED, "Disabled")
	STR_CASE(DSL_LINESTATE_T1413, "T1413")
	STR_CASE(DSL_LINESTATE_ORDERLY_SHUTDOWN_REQUEST, "Orderly shutdown request")
	STR_CASE(DSL_LINESTATE_ORDERLY_SHUTDOWN, "Orderly shutdown")
	STR_CASE(DSL_LINESTATE_TEST_FILTERDETECTION_ACTIVE, "Test filterdetection active")
	STR_CASE(DSL_LINESTATE_TEST_FILTERDETECTION_COMPLETE, "Test filterdetection complete")
#endif
	default:
		str = NULL;
		break;
	};

	if (str)
		m_str("state", str);

	if (map != LSTATE_MAP_UNKNOWN )
		m_u32("state_num", map);

	m_bool("up", out.data.nLineState == DSL_LINESTATE_SHOWTIME_TC_SYNC);
}
