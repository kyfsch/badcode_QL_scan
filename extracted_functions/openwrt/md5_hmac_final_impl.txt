static int md5_hmac_final_impl(struct shash_desc *desc, u8 *out, bool hash_final);

/*! \fn static void md5_hmac_transform(struct crypto_tfm *tfm, u32 const *in)
 *  \ingroup IFX_MD5_HMAC_FUNCTIONS
 *  \brief save input block to context   
 *  \param tfm linux crypto algo transform  
 *  \param in 64-byte block of input  
*/                                 
static void md5_hmac_transform(struct shash_desc *desc, u32 const *in)
{
    struct md5_hmac_ctx *mctx = crypto_shash_ctx(desc->tfm);

    if ( ((mctx->dbn<<4)+1) > MD5_HMAC_DBN_TEMP_SIZE )
    {
        //printk("MD5_HMAC_DBN_TEMP_SIZE exceeded\n");
        md5_hmac_final_impl(desc, (u8 *)mctx->hash, false);
    }

    memcpy(&mctx->temp[mctx->dbn], in, 64); //dbn workaround
    mctx->dbn += 1;
}
