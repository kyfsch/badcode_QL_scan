uc_bpf_debug_print(enum libbpf_print_level level, const char *format,
		   va_list args)
{
	char buf[256], *str = NULL;
	uc_value_t *val;
	va_list ap;
	int size;

	va_copy(ap, args);
	size = vsnprintf(buf, sizeof(buf), format, ap);
	va_end(ap);

	if (size > 0 && (unsigned long)size < ARRAY_SIZE(buf) - 1) {
		val = ucv_string_new(buf);
		goto out;
	}

	if (vasprintf(&str, format, args) < 0)
		return 0;

	val = ucv_string_new(str);
	free(str);

out:
	uc_vm_stack_push(debug_vm, ucv_get(ucv_array_get(registry, 0)));
	uc_vm_stack_push(debug_vm, ucv_int64_new(level));
	uc_vm_stack_push(debug_vm, val);
	if (uc_vm_call(debug_vm, false, 2) == EXCEPTION_NONE)
		ucv_put(uc_vm_stack_pop(debug_vm));

	return 0;
}
