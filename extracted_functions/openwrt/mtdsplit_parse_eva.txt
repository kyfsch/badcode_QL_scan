static int mtdsplit_parse_eva(struct mtd_info *master,
				const struct mtd_partition **pparts,
				struct mtd_part_parser_data *data)
{
	struct mtd_partition *parts;
	struct eva_image_header hdr;
	size_t retlen;
	unsigned long kernel_size, rootfs_offset;
	int err;

	err = mtd_read(master, 0, sizeof(hdr), &retlen, (void *) &hdr);
	if (err)
		return err;

	if (retlen != sizeof(hdr))
		return -EIO;

	if (le32_to_cpu(hdr.magic) != EVA_MAGIC)
		return -EINVAL;

	kernel_size = le32_to_cpu(hdr.size) + EVA_FOOTER_SIZE;

	/* rootfs starts at the next 0x10000 boundary: */
	rootfs_offset = round_up(kernel_size, 0x10000);

	/* skip the dummy EVA squashfs partition (with wrong endianness): */
	rootfs_offset += EVA_DUMMY_SQUASHFS_SIZE;

	if (rootfs_offset >= master->size)
		return -EINVAL;

	err = mtd_check_rootfs_magic(master, rootfs_offset, NULL);
	if (err)
		return err;

	parts = kzalloc(EVA_NR_PARTS * sizeof(*parts), GFP_KERNEL);
	if (!parts)
		return -ENOMEM;

	parts[0].name = KERNEL_PART_NAME;
	parts[0].offset = 0;
	parts[0].size = kernel_size;

	parts[1].name = ROOTFS_PART_NAME;
	parts[1].offset = rootfs_offset;
	parts[1].size = master->size - rootfs_offset;

	*pparts = parts;
	return EVA_NR_PARTS;
}
