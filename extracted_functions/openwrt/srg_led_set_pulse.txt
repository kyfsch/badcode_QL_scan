srg_led_set_pulse(struct led_classdev *led_cdev,
		  unsigned long *delay_on,
		  unsigned long *delay_off)
{
	struct srg_led *sysled = container_of(led_cdev, struct srg_led, led);
	struct srg_led_ctrl *sysled_ctrl = sysled->ctrl;
	bool blinking = false, pulsing = false;
	u8 cbyte;
	int ret;

	if (delay_on && delay_off && (*delay_on > 100) && (*delay_on <= 500)) {
		pulsing = true;
		*delay_on = 500;
		*delay_off = 500;
	} else if (delay_on && delay_off && (*delay_on >= 50) && (*delay_on <= 100)) {
		blinking = true;
		*delay_on = 50;
		*delay_off = 50;
	}

	cbyte = pulsing ? 3 : blinking ? 2 : 0;
	mutex_lock(&sysled_ctrl->lock);
	ret = srg_led_i2c_write(sysled_ctrl, sysled->index + 4,
				(blinking || pulsing) ? 255 : 0);
	if (!ret) {
		sysled_ctrl->control[sysled->index] = cbyte;
		ret = srg_led_control_sync(sysled_ctrl);
	}
	mutex_unlock(&sysled_ctrl->lock);

	return !cbyte;
}
