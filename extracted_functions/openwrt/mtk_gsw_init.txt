int mtk_gsw_init(struct fe_priv *priv)
{
	struct device_node *eth_node = priv->dev->of_node;
	struct device_node *phy_node, *mdiobus_node;
	struct device_node *np = priv->switch_np;
	struct platform_device *pdev = of_find_device_by_node(np);
	struct mt7620_gsw *gsw;
	const __be32 *id;
	int ret;
	u8 val;

	if (!pdev)
		return -ENODEV;

	if (!of_device_is_compatible(np, mediatek_gsw_match->compatible))
		return -EINVAL;

	gsw = platform_get_drvdata(pdev);
	priv->soc->swpriv = gsw;

	gsw->ephy_disable = of_property_read_bool(np, "mediatek,ephy-disable");

	mdiobus_node = of_get_child_by_name(eth_node, "mdio-bus");
	if (mdiobus_node) {
		for_each_child_of_node(mdiobus_node, phy_node) {
			id = of_get_property(phy_node, "reg", NULL);
			if (id && (be32_to_cpu(*id) == 0x1f))
				gsw->ephy_disable = true;
		}

		of_node_put(mdiobus_node);
	}

	gsw->port4_ephy = !of_property_read_bool(np, "mediatek,port4-gmac");

	if (of_property_read_u8(np, "mediatek,ephy-base", &val) == 0)
		gsw->ephy_base = val;
	else
		gsw->ephy_base = 0;

	mt7620_mac_init(gsw);

	mt7620_ephy_init(gsw);

	if (gsw->irq) {
		ret = request_irq(gsw->irq, gsw_interrupt_mt7620, 0,
				  "gsw", priv);
		if (ret) {
			dev_err(&pdev->dev, "Failed to request irq");
			return ret;
		}
		mtk_switch_w32(gsw, ~PORT_IRQ_ST_CHG, GSW_REG_IMR);
	}

	return 0;
}
